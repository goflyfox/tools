[client]
default-character-set=utf8mb4

[mysql]
default-character-set=utf8mb4

[mysqld]
server-id=10

gtid_mode=ON
enforce-gtid-consistency
log_bin=ON
log-slave-updates=ON

character_set_server=utf8
init_connect='SET NAMES utf8'

#该值设置过小将导致单个记录超过限制后写入数据库失败，且后续记录写入也将失败
max_allowed_packet=16M

# 联合查询操作所能使用的缓冲区大小，和sort_buffer_size一样，该参数对应的分配内存也是每连接独享
join_buffer_size = 8M

# MySQL读入缓冲区大小。对表进行顺序扫描的请求将分配一个读入缓冲区，MySQL会为它分配一段内存缓冲区。read_buffer_size变量控制这一缓冲区的大小。
# 如果对表的顺序扫描请求非常频繁，并且你认为频繁扫描进行得太慢，可以通过增加该变量值以及内存缓冲区大小提高其性能
read_buffer_size=16M

# MySQL的随机读缓冲区大小。当按任意顺序读取行时(例如，按照排序顺序)，将分配一个随机读缓存区。进行排序查询时，
# MySQL会首先扫描一遍该缓冲，以避免磁盘搜索，提高查询速度，如果需要排序大量数据，可适当调高该值。但MySQL会为每个客户连接发放该缓冲空间，所以应尽量适当设置该值，以避免内存开销过大
read_rnd_buffer_size=32M

# MySQL执行排序使用的缓冲大小。如果想要增加ORDER BY的速度，首先看是否可以让MySQL使用索引而不是额外的排序阶段。
# 如果不能，可以尝试增加sort_buffer_size变量的大小
sort_buffer_size=32M


# MySQL的最大连接数，如果服务器的并发连接请求量比较大，建议调高此值，以增加并行连接数量，当然这建立在机器能支撑的情况下，因为如果连接数越多，介于MySQL会为每个连接提供连接缓冲区，就会开销越多的内存，所以要适当调整该值，不能盲目提高设值。可以过'conn%'通配符查看当前状态的连接数量，以定夺该值的大小
max_connections=2000

# 对于同一主机，如果有超出该参数值个数的中断错误连接，则该主机将被禁止连接。如需对该主机进行解禁，执行：FLUSH HOST
max_connect_errors=10000

# MySQL支持4种事务隔离级别，他们分别是：
# READ-UNCOMMITTED, READ-COMMITTED, REPEATABLE-READ, SERIALIZABLE.
# 如没有指定，MySQL默认采用的是REPEATABLE-READ，ORACLE默认的是READ-COMMITTED
transaction_isolation = READ-COMMITTED

#主要是控制 error log、genera log，等等记录日志的显示时间参数。
log_timestamps=system

# 如果一行数据中某些列被更新了，如果这一行中有timestamp类型的列，那么么这个timestamp列的数据
# 也会被自动更新到 更新操作所发生的那个时间点；
explicit_defaults_for_timestamp=0

#mysql在关闭一个交互的连接之前所要等待的秒数
interactive_timeout=7200

#mysql在关闭一个交互的连接之前所要等待的秒数
wait_timeout=7200

#表名不区分大小写
lower_case_table_names=1

########innodb settings########
innodb_page_size=8k
# InnoDB使用一个缓冲池来保存索引和原始数据, 不像MyISAM.这里你设置越大,你在存取表里面数据时所需要的磁盘I/O越少.在一个独立使用的数据库服务器上,你可以设置这个变量到服务器物理内存大小的80%
innodb_buffer_pool_size=256M
#mysql事务日志文件的大小
innodb_log_file_size=64M
#确保有足够大的日志缓冲区来保存脏数据在被写入到日志文件之前。
innodb_log_buffer_size=16M
#在创建InnoDB索引时用于指定对数据排序的排序缓冲区的大小。利用这块内存把数据读进来进行内部排序然后写入磁盘。这个参数只会在创建索引的过程中被使用，不会用在后面的维护操作；在索引创建完毕后innodb_sort_buffer会被释放。
innodb_sort_buffer_size=1M

########log settings########
#错误日志文件名称
log-error=/var/log/mysql/mysqld.log   
#开启慢日志查询
slow_query_log=1                      
#超过2秒返回查询的结果为慢查询
long_query_time=2                
#慢查询日志
slow_query_log_file=/var/log/mysql/slow.log    

#当一个从库是多源复制结构，那么master_info和relay_log_info不能用file方式来存储，必须使用table，它不支持file
log-bin=mysql-bin
#binlog日志保存时间
expire_logs_days=30
#控制mysql怎么刷新二进制日志到磁盘，默认是0，意味着mysql并不刷新，由操作系统自己决定什么时候刷新缓存到磁盘，如果这个值比0大，它指定了两次刷新到磁盘的动作之间间隔多少次二进制日志写操作，如果没有设置它为1，那么崩溃后可能导致二进制日志没有同步事务数据，这可以轻易的导致复制中断，并且使得及时恢复变得不可能，无论如何，可以把这个值设置为1来获得安全的保障，这样就会要求mysql同步把二进制日志和事务日志这两个文件刷新到两个不同的位置，这可能需要磁盘寻道，相对来说是个很慢的操作。
sync_binlog = 1
#mysql复制主要有三种方式：基于SQL语句的复制(statement-based replication, SBR)，基于行的复制(row-based replication, RBR)，混合模式复制(mixed-based replication, MBR)。对应的，binlog的格式也有三种：STATEMENT，ROW，MIXED。
binlog_format=row
